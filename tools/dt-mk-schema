#!/usr/bin/env python3
# SPDX-License-Identifier: BSD-2-Clause
# Copyright 2018 Linaro Ltd.
# Copyright 2018 Arm Ltd.

import signal

def sigint_handler(signum, frame):
    sys.exit(-2)

signal.signal(signal.SIGINT, sigint_handler)

import os
import sys
basedir = os.path.dirname(__file__)
import ruamel.yaml
sys.path.insert(0, os.path.join(basedir, ".."))
import dtschema
import argparse
import glob
import jsonschema



if __name__ == "__main__":
    ap = argparse.ArgumentParser()
    ap.add_argument("-o", "--outfile", type=str,
                    help="Filename of YAML encoded devicetree input file")
    ap.add_argument("schemas", type=str,
                    help="Filename of YAML encoded devicetree input file")
    args = ap.parse_args()

    if not os.path.isdir(args.schemas):
        print("error: path not found: %s" % args.schemas)
        exit(-1)

    schemas = dtschema.process_schemas(args.schemas)
    if not schemas:
        exit(-1)

    if args.outfile:
        f = open(args.outfile, 'w', encoding='utf-8')
    else:
        f = sys.stdout

    yaml = ruamel.yaml.YAML()
    yaml.dump(schemas, f)
